# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'docker-connection'
  imageRepository: 'webapplication'
  containerRegistry: 'test2gfvjgfv'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: publish artifact
  jobs:
    -  job: publishartifact
       displayName: publishartifact
       pool:
         vmImage: $(vmImageName)
       steps:
         -  task: UseDotNet@2
            displayName: dotnet download
            inputs:
               packageType: sdk
               version: '6.x'

         - task: NuGetToolInstaller@1
           displayName: nuget install

         - task: NuGetCommand@2
           displayName: nuget restore
           inputs:
             restoreSolution: $(solution)

         - task: DotNetCoreCLI@2
           displayName: dotnet-build
           inputs:
            command: build
            arguments: '--configuration $(buildConfiguration)'
            projects: '**/*.csproj'
          
         - task: DotNetCoreCLI@2
           displayName: dotnet-publish
           inputs:
              command: publish
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              publishWebProjects: true
              zipAfterPublish: false

         - pwsh: 
            Get-ChildItem -path $(Build.ArtifactStagingDirectory)\*.* -Recurse -Force | Out-String -Width 80
           errorActionPreference: Continue
           displayName: 'List-Content'
           continueOnError: true



         - task: Docker@2
           displayName: Build and push an image to container registry
           inputs:
            command: buildAndPush
            buildContext: '$(Build.ArtifactStagingDirectory)/WebApplication1'
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
             $(tag)


         - task: PublishPipelineArtifact@1
           displayName: publish artifact
           inputs:
              publishLocation: pipeline
              artifact: 'sourcefiles'
              targetPath: $(Pipeline.Workspace)