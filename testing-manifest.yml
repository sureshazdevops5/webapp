# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'docker-spn'
  imageRepository: 'webapplication'
  containerRegistry: 'testsureshacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'


pool:
 vmImage: $(vmImageName)

steps:

- task: UseDotNet@2
  displayName: dotsdk
  

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
   command: build
   projects: '**/*.csproj'
   arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: publish
  inputs:
   command: publish
   publishWebProjects: true
   zipAfterPublish: false
   arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- publish: '$(Build.ArtifactStagingDirectory)'
  displayName: 'publish-build'
  artifact: buildartifacts

- script: ls -R $(Pipeline.Workspace)/buildartifacts


- task: Docker@2
  displayName: Build and push an image to container registry
  inputs: 
     command: buildAndPush
     buildContext: '$(Pipeline.Workspace)/buildartifacts/WebApp'
     repository: $(imageRepository)
     dockerfile: $(dockerfilePath)
     containerRegistry: $(dockerRegistryServiceConnection)
     tags: |
       $(tag)

- task: ShellScript@2
  displayName: update manifest
  inputs:
     scriptPath: 'WebApp/manifest.sh'
     args: webapp80 $(imageRepository) $(tag)

