trigger:
- master


variables:
  Solution: '**/*.sln'
  BuildPlatform: 'Any Cpu'
  BuildConfiguration: 'Release'
  vmImage: 'Windows-Latest'


stages:
- stage: Build
  displayName: BUild Stage
  jobs:
  - job: BUild
    displayName: Build
    pool:
      vmImage: $(vmImage)


    steps:
      -  task: UseDotNet@2
         displayName: dotnet installation
         inputs:
            packageType: sdk
            version: '6.x'


      - task: NuGetToolInstaller@1
        displayName: nuget installation


      - task: NuGetCommand@2
        displayName: nuget restore
        inputs:
           restoreSolution: $(solution)


      - task: DotNetCoreCLI@2
        displayName: dotnet build
        inputs:
           command: 'build'
           projects: '**/*.csproj'
           arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: dotnet publish
        inputs:
           command: 'publish'
           publishWebProjects: true
           zipAfterPublish: true
           arguments: '--configuration $(BuildConfiguration)  --output $(build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: publishing artifcat
        inputs:
           ArtifactName: 'webapp'
           PathtoPublish: $(build.ArtifactStagingDirectory)

- stage: Deploy
  displayName: Deploy stage
  jobs:
    -  job: Deploy
       displayName: Deploy
       steps:
       - download: current
         artifact: 'webapp'
         displayName: webapp artifact download
        
       - script: ls -R $(System.DefaultWorkingDirectory)
         displayName: listing files

       - task: AzureWebApp@1
         displayName: webapp deployment
         inputs:
            appName: 'testkvv'
            appType: 'webApp'
            azureSubscription: 'own-service-connection'
            deploymentMethod: zipDeploy
            package: '$(System.DefaultWorkingDirectory)'