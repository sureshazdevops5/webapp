# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'docker-spn'
  imageRepository: 'webapplication'
  containerRegistry: 'testsureshacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    container: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      -  task: DotNetCoreCLI@2
         displayName: Build
         inputs:
            command: build
            projects: '**/*.csproj'
            arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: publish
        inputs:
           command: publish
           publishWebProjects: true
           zipAfterPublish: false
           arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

      - publish: '$(Build.ArtifactStagingDirectory)'
        displayName: 'publish-build'
        artifact: buildartifacts

- stage: Deploy
  displayName: Push-Stage
  jobs:
    -  job: Deploy
       displayName: Deploy
       pool:
         vmImage: $(vmImageName)

       steps:
        - download: current
          artifact: buildartifacts

        - script: ls -R $(Pipeline.Workspace)/buildartifacts


        - task: Docker@2
          displayName: Build and push an image to container registry
          inputs:
            command: buildAndPush
            buildContext: '$(Pipeline.Workspace)/buildartifacts/WebApp'
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
             $(tag)
            
        - task: Bash@3
          displayName: replace imageid
          inputs:
            targetType: 'inline'
            script: 'sed -i "s|testsureshacr.azurecr.io/webapp:[0-9]*|testsureshacr.azurecr.io/webapp:$(Build.BuildId)|g" _webapp/webapp80service.yaml'


        - task: PublishPipelineArtifact@1
          inputs:
             artifact: 'sourcefiles'
             targetPath: '$(Pipeline.Workspace)'
             publishLocation: pipeline


